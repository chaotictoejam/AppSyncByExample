service: library-catalog-api

plugins:
  - serverless-appsync-plugin

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1 # Change to your desired AWS region
  stage: dev

appSync:
  name: library-api
  authentication:
    type: API_KEY
  schema: ./lib/schema.graphql

  pipelineFunctions:
    getAuthor:
      dataSource: library
      request: ./lib/mapping-templates/functions/getAuthor.request.vtl
      response: ./lib/mapping-templates/functions/getAuthor.response.vtl
    createAuthorBook:
      dataSource: library
      request: ./lib/mapping-templates/functions/createAuthorBook.request.vtl
      response: ./lib/mapping-templates/functions/createAuthorBook.response.vtl
    createBookAuthor:
      dataSource: library
      request: ./lib/mapping-templates/functions/createBookAuthor.request.vtl
      response: ./lib/mapping-templates/functions/createBookAuthor.response.vtl
    updateAuthorBook:
      dataSource: library
      request: ./lib/mapping-templates/functions/updateAuthorBook.request.vtl
      response: ./lib/mapping-templates/functions/updateAuthorBook.response.vtl
    updateBookAuthor:
      dataSource: library
      request: ./lib/mapping-templates/functions/updateBookAuthor.request.vtl
      response: ./lib/mapping-templates/functions/updateBookAuthor.response.vtl

  resolvers:
    Query.author:
      kind: UNIT
      dataSource: library
      request: ./lib/mapping-templates/Query.author.request.vtl
      response: ./lib/mapping-templates/Query.author.response.vtl
    mutations/createAuthor:
      kind: UNIT
      dataSource: library
      request: ./lib/mapping-templates/mutations/createAuthor.request.vtl
      response: ./lib/mapping-templates/mutations/createAuthor.response.vtl
    mutations/updateAuthor:
      kind: UNIT
      dataSource: library
      request: ./lib/mapping-templates/mutations/updateAuthor.request.vtl
      response: ./lib/mapping-templates/mutations/updateAuthor.response.vtl
    mutations/deleteAuthor:
      kind: UNIT
      dataSource: library
      request: ./lib/mapping-templates/mutations/deleteAuthor.request.vtl
      response: ./lib/mapping-templates/mutations/deleteAuthor.response.vtl
    Query.book:
      kind: UNIT
      dataSource: library
      request: ./lib/mapping-templates/Query.book.request.vtl
      response: ./lib/mapping-templates/Query.book.response.vtl
    mutations/createBook:
      kind: PIPELINE
      request: ./lib/mapping-templates/pipelines/createBook.before.vtl
      response: ./lib/mapping-templates/pipelines/createBook.after.vtl
      functions:
        - getAuthor
        - createBookAuthor
        - createAuthorBook
    mutations/updateBook:
      kind: PIPELINE
      request: ./lib/mapping-templates/pipelines/updateBook.before.vtl
      response: ./lib/mapping-templates/pipelines/updateBook.after.vtl
      functions:
        - getAuthor
        - updateBookAuthor
        - updateAuthorBook
    mutations/deleteBook:
      kind: PIPELINE
      request: ./lib/mapping-templates/pipelines/deleteBook.before.vtl
      response: ./lib/mapping-templates/pipelines/deleteBook.after.vtl
      functions:
        - getAuthor
        - updateBookAuthor
        - updateAuthorBook

  dataSources:
    library:
      type: AMAZON_DYNAMODB
      config:
        tableName: ${sls:stage}-librarycatalog
        
resources: # CloudFormation template syntax from here on.
  Resources:
    LibraryCatalogTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${sls:stage}-librarycatalog
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5